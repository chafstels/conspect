'========================String(строки)======================='
# строки - неизменяемый тип данных, который предназначен для хранения текста (последовательности символов), заключенного в одинарные или двойные кавычки

string1 = 'строка с одинарными кавычками'
string2 = "строка с двойными кавычками"

# string3 = "Don't"# одинарные кавычки внутри двойных являются символом
# print(string3)
# string4 = 'Petter is "strong" man'
# print(string4)
# string5 =  'Petter isn\'t "strong" man'# обратный слеш подсказывает питону что после него идет символ кавычки
# print(string5)


# '=========================Экранизация строк=========================='
# '\n' #перенос на новую строку
# string6 = 'Ada courses \nThe better courses'
# print(string6)
# '\t' #табуляция
# print("hello\tworld")
# '\'' # отображение кавычки
# "\"" # отображение двойных кавычек
# '\\' # отображение одного слеша
# print('~\\Desktop\\ada')
# '\v' # перенос строки на новую со смещением вправо на длину предыдущей строки
# print('hello\vworld\vada\vcourses')
# '\r' #перенос каретки на начало строки
# print('Hello world\rHi')


# string5 = '''
# Многострочный текст
# в одинарных кавычках,
# тут можно ставить 'любые' "кавычки"
# '''

# string6 = """
# Многострочный текст
# в двойных кавычках,
# тут можно ставить 'любые' "кавычки"
# """

"=============================Форматирование строк====================="
title = 'iphone 13'
price = 900
format1 = f"Название: {title}\nЦена: {price}"
# print(format1)

format2 = "Название: {}\nЦена: {}"
# print(format2.format("хлеб", 15))
# print(format2.format(title, price))

format3 = "Название: %s\nЦена: %s"
# print(format3 % (title, price))
# print(format3 % ("Iphone 15", "2000"))


# string7 = 'hello' + ' ' + 'world' # конкатенция
# print(string7)
# string8 = string7 * 5
# print(string8)


'========================Индексы======================='
# индексы - порядковыц номер элемента в последовательности (символ строке) начинается с нуля 0 1 2 3

'''
h e l l o   w o r l d
0 1 2 3 4 5 6 7 8 9 10
                 -2 -1
'''
string = 'hello world'


# срез - это определенная часть строки
# string[start, end, step]
# print(string[::-1])

# print(string[::4])

'----------------------Методы строк--------------------------'
# Методы - это функции которым относятся к определенному классу(типу данных), к ним обращаемся через точку

# print(dir(str)) # посмотреть все методы string

# string = 'hello world'
# upper_string = string.upper() # все большие буквы
# # print(string, upper_string)
# print(string.lower()) # все маленькие буквы
# print(string.swapcase()) # меняет регист всех букв
# print(string.title()) # Каждое слово будет с большой буквы
# print(string.capitalize()) #Делает первую букву большой а остальные маленькие
# print(string.count('l')) # считает символы
# print(string.startswith('hel')) # проверка начинается ли строка с заданных символов
# print(string.endswith('ld')) # проверка заканчивается ли строка с заданных символов
# print(string.isupper()) # проверка всех символов на верхний регистр
# print(string.islower()) # проверка всех символов на нижний регистр
# print(string.isdigit()) # проверка является ли строка числовой
# print(string.isalpha()) # является ли строка буквами
# print(string.isalnum()) # является ли строка буквами числами или все вместе
# print(string.split()) # разделитель
# print('?'.join(['world', string])) # склеивает все
# print('            hello          world      '.strip()) #убирает с начала и с конца
# print('            hello          world      '.lstrip()) #убирает с начала
# print('            hello          world      '.rstrip()) #убирает  с конца
# print(string.replace('l', ' ')) # меняет символ на указанный


# name = input("Введите ваше имя")
# age = input("сколько вам лет ")
# favorite_mov = input("Введите ваш любимый фильм")
# print(f'Привет {name}\nВаш фильм очень интересный {favorite_mov}')


# text = """Этот документ описывает соглашение о том, как писать код для языка python, включая стандартную библиотеку, входящую в состав python.
#           PEP 8 создан на основе рекомендаций Гуидо ван Россума с добавлениями от Барри. Если где-то возникал конфликт, мы выбирали стиль Гуидо.
#           И, конечно, этот PEP может быть неполным (фактически, он, наверное, никогда не будет закончен)."""

# simvol = input("Введите любую букву")
# print(text.split(simvol))

# text = """Ключевая идея Гуидо такова: код читается намного больше раз, чем пишется.
# Собственно, рекомендации о стиле написания кода направлены на то, чтобы улучшить читаемость кода и сделать его согласованным
# между большим числом проектов. В идеале, весь код будет написан в едином стиле, и любой сможет легко его прочесть."""

# a = 'е'
# print(text.replace(a, '5'))


text = """Пробелы - самый предпочтительный метод отступов.
Табуляция должна использоваться только для поддержки кода, написанного с отступами с помощью табуляции.
Python 3 запрещает смешивание табуляции и пробелов в отступах.
Python 2 пытается преобразовать табуляцию в пробелы."""

# count = 0
# # print(text.split())
# for a in text.split():
#     if a.isalpha() and len(a) > 1:
#         count = count + 1
#     elif a[:-2].isalpha():
#         print(a[:-2])
#         count = count + 1
# print(count)

'''
Напишите программу, которая высчитывает количество гласных букв в введенной пользователем строке. И программа выдает вам следующее предложение: В вашей строке насчитано n гласных букв.

Например:
Ввод: Введите строку: I love Ada!
Вывод: В вашей строке насчитано 5 гласных букв

Примечание: не использовать конкатенацию
'''

# stroka = input().lower()
# # for a in stroka:
# #     if a == 'a' or a =='o' or a == 'e' or a == 'y' or a =='u' or a == 'i':
# #         count = count + 1
# count = stroka.count('a') + stroka.count('o') + stroka.count('e') + stroka.count('y') + stroka.count('u') + stroka.count('i')

# print(f'В вашей строке насчитано {count} гласных букв')

'''
Напишите программу, которая просит пользователя ввести свой юзернейм (одним словом) и генерирует пароль из юзернейма, добавив в конец строки символ $, в середину символ &, и заменив строчные буквы на заглавные и наоборот.

Например:
Ввод: Введите юзернейм: JohnSnow
Вывод: Вам сгенерирован пароль: jOHN&sNOW$
'''

# username = input('Введите юзернейм: ')
# a = int(len(username)/2) + 1
# user = username.swapcase()
# password = user[:a] + '&' + user[a:] + '$'
# print(f'Вам сгенерирован пароль: {password}')


text = '''Пробелы - самый предпочтительный метод отступов.
Табуляция должна использоваться только для поддержки кода, написанного с отступами с помощью табуляции.
Python 3 запрещает смешивание табуляции и пробелов в отступах.
Python 2 пытается преобразовать табуляцию в пробелы.'''

# num = input('Введите число: ')

# if num.isdigit():
#     print(int(num) *2**3)
# elif num.isalnum():
#     print('недопустимый символ')


# a=0
# while a <= 100:
#     if a % (5 * 3) == 0:
#         print(a)
#     a += 1

# for i in range(0,101):
#     if i % 5 == 0 and i % 3 == 0:
#         print(i)

# i = 1
# while i <= 100:
#     if i % 2 ==0 and i % 3==0 and i % 9==0:
#         print(i)
#     i += 1

# for i in range(1,101):
#     if i % 2 ==0 and i % 3==0 and i % 9==0:
#         print(i)

# for i in range(1, 301):
    # if i == 237:
    #     break
    # elif i % 2 ==0:
    #     print(i)


my_string = "Ботнет IPStorm, в который ранее входили лишь Windows-машины, увеличился до 13 500 зараженных систем"

# for i in my_string:
#     if i.isdigit():
#         print(int(i) * 2)

# my_string = "20210419-2021071914424/..H/][[102e//==::'/:13-=---1234l][23-13lo31w323'/.,,o32r;;ld"
# new_string = ''
# for i in my_string:
#     if i.isalpha():
#         new_string += i
# print(new_string)

# for i in range(5,0,-1):
#     print(i)

# for i in range(1,50):
#     num = i ** 2
#     if num < 50:
#         print(i**2)

# count = 1
# while count ** 2 <= 50:
#     num = count ** 2
#     print(num)
#     count += 1

# summa = 0
# for i in range(1,31):
#     summa = summa + i
# print(summa)
