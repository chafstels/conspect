# '======================Словарь(dict)======================'
# # dict - это изменяемый, итерируемый, неупорядочный, неиндексируемый тип данных, хранит данные в парах (ключ:значение) (key: values)

# user = {'name': 'Anton', 'login': 'ada_ms', 'password': 12345}
# print(user['login']) # ada_ms
# print(user)
# # ключами в словаре могут быть только неизменяемые типы данных
# # ключи должны быть уникальными, не должны повторятся, если же они повторяются то сохранится последний

# # значения могут быть любые типы данных, могут повторятся

# dict_ = {1:'a', 2:'b', 3:'c'}
# # dict_[4] # KeyError

# '=========================Создание=================================='
# dict_ = {1:'a', 2:'b', 3:'c'}
# dict_ = dict([(1,'a'), (2,'b'), (3,'c')])

# dict_ = {1: {1:'a', 2:'b'}, 2: 'c'}
# dict_['name'] = 'Ertay'
# dict_['login'] = 'xyq'

# print(dict_)

# '======================Методы словарей========================'
# # get - метод, который возращает значение по ключу, если такого ключа нет, то возращает None или дефолтное значение

# user = {'name': 'Anton', 'login': 'ada_ms', 'password': 12345}
# # print(user['email'])
# print(user.get('email', 'Такого ключа нет!'))
# print(user.get('login', 'Такого ключа нет!'))

# # pop - метод, удаляет пару по ключу и возращает значение
# # remove_elem = user.pop('password')
# # print(remove_elem)
# # print(user)

# # popitem - метод, который удаляет последнюю пару и возращает ее
# remove_item = user.popitem()
# print(remove_item)
# print(user)

# # update - метод, который расширяет словарь парами из другого словаря
# dict_1 = {1:'a', 2:'b'}
# dict_2 = {3:'c'}

# dict_1.update(dict_2)
# print(dict_1, dict_2)

# # clear - очищает словарь
# dict_1.clear()
# print(dict_1)

# # fromkeys - метод, который создает новый словарь используя список ключей
# dict_1 = dict.fromkeys(['Anton','Alina','Adina','Adilet'], 'name')
# print(dict_1)

# # keys, values, items
# # keys - метод, который возращает ключи
# # values - метод, который возращает значения
# # items - метод, который возращает tuple (ключ, значение)

# print(dict_1.keys())
# print(dict_1.values())
# print(dict_1.items())

# '=====================Итерирование словарей======================='

# user = {'name': 'Anton', 'login': 'ada_ms', 'password': 12345}
# for key in user.keys():
#     print(key)

# for value in user.values():
#     print(value)

# for key, value in user.items():
#     print(key, value)

# new_user = {}
# for key, value in user.items():
#     new_user[value] = key

# print(new_user)


# """
# 1) Создайте словарь university, и заполните данными, которые бы отражали количество учащихся на разных факультетах (программирование, экономика, медицина). Внесите изменения в словарь согласно следующему: а) в одном из факультетов изменилось количество учащихся, б) в университете появился новый факультет(лингвистика), с) в университете был расформирован (удален) другой факультет (медицины). Вычислите общее количество учащихся в университете.
# """
# university = {'программирование': 10, 'экономика': 9, 'медицина':8}
# university['программирование'] = 15
# university['лингвистика'] = 0
# university.pop('медицина')
# print(sum(university.values()))
# print(university)

# """
# 2) Создайте словарь, где ключами являются числа, а значениями – строки. Поменяйте ключи и значения местами.
# Например: исходный словарь - {1: ‘a’, 2: ‘b’, 3: ‘c’}
# На выходе - {‘a’: 1, ‘b’: 2, ‘c’: 3}
# """

# list_ = {1: 'a', 2: 'b', 3: 'c'}
# list_new = {}
# for key, value in list_.items():
#     list_new[value]= key
# print(list_new)


# """
# 3) Создайте программу, которая запрашивает у вас количество гостей, которых вы хотите пригласить. Далее запрашивает у вас имена гостей поочередно. Как только вы введете последнего гостя программа должна выдать вам список гостей и их порядковые номера в виде словаря.
# """
# guest = int(input())
# party = []
# new_dict = {}
# for i in range(guest):
#     party.append(input("Напишите имя гостя: "))

# for i in range(guest):
#     new_dict[i+1] = party[i]

# print(new_dict)
# print(party)

# s = 'abs'
# print(s[::-1])



# '''
# ТЗ “Угадай число”

# Напишите мини-проект “Угадай число”. Для
# этого, вам понадобиться стандартный
# ввод/вывод данных, тип данных числа и
# условные операторы. Также не забудьте
# использовать библиотеку random.
# Требования:
# 1. Ваша программа должна запрашивать
# имя пользователя. Программа должна
# запросить у пользователя хочет ли он
# играть или нет. Если ответ будет ‘нет’, то
# программа должна завершиться.
# 2. Далее пользователь должен угадать
# число. Также вы должны сделать счетчик
# попыток, и показать пользователю сколько
# попыток ему потребовалось, чтобы отгадать
# число.
# 3. Если пользователь угадал число,
# запросить у него хочет ли он пройти игру
# еще раз, если ответ будет “нет”, программа
# должна завершиться'''



# sample_set = {'orange', 'yellow', 'black'}
# sample_list = ['blue', 'green', 'red']
# for i in sample_list:
#     sample_set.add(i)

# print(sample_set)


# set1 = set(dir(set))
# set2 = set(dir(dict))
# for i in set1.intersection(set2):
#     if str(i).startswith('__'):
#         continue
#     print(i)

# suitcase = []
# for i in range(5):
#     i = input()
#     suitcase.append(i)
# suitcase.pop(4)
# print(suitcase)

# storka = input()
# list_ = []
# for i in storka:
#     list_.append(i)
# list1 = set(list_)
# print(list1)
# list_ = input().lower().split()
# print(list_)
# for slova in list_:
#     print(len(set(slova)))


"""
1)  Даны несколько хэштегов, разделённых символом '#'. Разделите их в отдельные строки. Например: #ada#bootcamp#программирование#it#курсы -> ['ada', 'bootcamp', 'программирование', 'it', 'курсы']
"""
"""
2) Проверить введенные пользователем данные, если длина строки больше или равна 5 символам вывести “True”, если меньше 'False'.
"""
"""
3)  Проверить введенное пользователем число если оно отрицательное то вывести “negative”, если положительное то “positive”, если оно равно 0 то вывести “Zero”
"""
"""
4)  Запросите у позьзователя число от 1 до 12
Если число вне диапазона, выведите "Такого месяца нет"
Иначе выведите какому сезону принадлежит месяц под этим номером ("зима", "весна", "лето", "осень").
"""
"""
5) Напишите программу, которая заполняет список словами, введенными с клавиатуры, измеряет длину каждого слова и добавляет полученное значение в другой список. Например, список слов – ['yes', 'no', 'maybe', 'ok', 'what'], список длин – [3, 2, 5, 2, 4]. Оба списка должны выводиться на экран.
"""
"""
6) Создать список чисел nums.
Используя цикл и метод списка, запишите все числа меньше 5 в новый список.
Результат запишите в переменную res и выведите в терминал. nums выглядит так:
nums = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
результат будет:

res = [1, 1, 2, 3]
"""
"""
7) Создайте словарь a с числовыми значениями. Создайте новый словарь b, такой же как словарь а, но все четные значения замените на 2.

 Пример: Ввод ->
 a = {'a': 1, 'b': 4, 'c': 1, 'd': 5, 'e': 6}
 Вывод ->
 b = {'a': 1, 'b': 2, 'c': 1, 'd': 5,  'e': 2}
"""
